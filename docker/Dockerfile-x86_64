# See docker/glibc/
FROM quay.io/pypa/manylinux2010_centos-6-no-vsyscall
LABEL maintainer="The ManyLinux project"

ENV AUDITWHEEL_ARCH x86_64
ENV AUDITWHEEL_PLAT manylinux2010_$AUDITWHEEL_ARCH
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV DEVTOOLSET_ROOTPATH /opt/rh/devtoolset-8/root
ENV PATH $DEVTOOLSET_ROOTPATH/usr/bin:$PATH
ENV LD_LIBRARY_PATH $DEVTOOLSET_ROOTPATH/usr/lib64:$DEVTOOLSET_ROOTPATH/usr/lib:$DEVTOOLSET_ROOTPATH/usr/lib64/dyninst:$DEVTOOLSET_ROOTPATH/usr/lib/dyninst:/usr/local/lib64:/usr/local/lib
ENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig

COPY build_scripts /build_scripts
RUN bash build_scripts/build.sh && rm -r build_scripts

ENV SSL_CERT_FILE=/opt/_internal/certs.pem

RUN bash mkdir /tmp_build \
	&& cd /tmp_build \
	&& curl -L https://github.com/Kitware/CMake/releases/download/v3.16.0-rc3/cmake-3.16.0-rc3.tar.gz -o cmake.tgz \
	&& mkdir cmake_build  \
	&& tar -xzf cmake.tgz -C cmake_build --strip-components 1 \ 
	&& cd cmake_build \
	&& ./bootstrap \
	&& gmake \
	&& gmake install \
	&& yum -y erase cmake \
	&& ln -s /usr/local/bin/cmake /usr/bin/cmake

ARG GCC_VERSION=8.3.0


RUN bash mkdir /tmp_build/cland_src \
	&& git clone https://github.com/llvm/llvm-project.git /tmp_build/clang_src \
	&& cd /tmp_build/clang_src \
	&& git checkout 9.0.0 \
	&& cd .. && mkdir clang_build && cd clang_build \
	&& cmake -DLLVM_ENABLE_PROJECTS=clang -G "Unix Makefiles" ../clang_src/llvm \
	&& make \
	&& make install
	  

CMD ["/bin/bash"]
